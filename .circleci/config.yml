version: 2
jobs:
  build:
    working_directory: /app
    environment:
      - IMAGE_NAME: "smb-timemachine" 
    docker:
      - image: docker:stable-git
    steps:
      - checkout
      - setup_remote_docker
      #- run:
      #    name: Install dependencies
      #    command: |
      #      apk add --no-cache \
      #        py-pip=9.0.0-r1
      #      pip install \
      #        docker-compose==1.12.0 \
      #        awscli==1.11.76
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            VERSION="$(cat VERSION | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
            docker build --cache-from=app \
              --build-arg VCS_REF=$(git rev-parse --short HEAD) \
              --build-arg BUILD_DATE="$(date -u +"%Y-%m-%dT%H:%M:%SZ")" \
              --build-arg VERSION="$VERSION" \
              -t app .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar
      #- run:
      #    name: Run tests
      #    command: |
      #      docker-compose -f ./docker-compose.test.yml up
      - deploy:
          name: Push application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              VERSION="$(cat VERSION | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
              docker tag app "$DOCKER_USERNAME/$IMAGE_NAME:$VERSION"
              docker tag app "$DOCKER_USERNAME/$IMAGE_NAME:latest"
              docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
              
              docker push "$DOCKER_USERNAME/$IMAGE_NAME:$VERSION"
              docker push "$DOCKER_USERNAME/$IMAGE_NAME:latest"
            fi
